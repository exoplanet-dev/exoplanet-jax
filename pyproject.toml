[tool.poetry]
name = "jaxoplanet"
packages = [{ include = "jaxoplanet", from = "src" }]
version = "0.0.0"
description = "Probabilistic models for exoplanet inference in JAX"
license = "MIT"
authors = ["Dan Foreman-Mackey <dfm@dfm.io>"]
readme = "README.md"
homepage = "https://github.com/exoplanet-dev/jaxoplanet"
repository = "https://github.com/exoplanet-dev/jaxoplanet"
documentation = "https://github.com/exoplanet-dev/jaxoplanet"
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
exclude = ["tests"]

[tool.poetry.dependencies]
python = "^3.8"
jax = { extras = ["cpu"], version = "^0.4" }
typing-extensions = "^4.5"
pytest = { version = "*", optional = true }
pytest-xdist = { version = "*", optional = true }
exoplanet-core = { version = "*", optional = true }
batman-package = { version = "^2.4", optional = true }
sympy = { version = "^1.11", optional = true }
myst-nb = { version = "^0.17.1", optional = true }
starry = { version = "^1.2.0", optional = true }
tqdm = { version = "*", optional = true }

[tool.poetry.extras]
docs = ["myst-nb"]
test = ["pytest", "pytest-xdist", "exoplanet-core", "batman-package"]
test-math = ["sympy"]
comparison = ["starry", "tqdm"]

[tool.poetry.group.dev.dependencies]
nox = "^2022.11.21"
ruff = "^0.0.253"
black = "^23.1.0"
pre-commit = "^3.1.1"
pytest = "^7.2.1"
sympy = "^1.11.1"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poetry-dynamic-versioning.substitution]
folders = [{ path = "src" }]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
target-version = ["py38", "py39"]
line-length = 88

[tool.ruff]
line-length = 89
update-check = false
target-version = "py38"
select = ["F", "I", "E", "W", "YTT", "B", "Q", "PLE", "PLW"]
ignore = [
    "E741", # Allow ambiguous variable names (e.g. "l" in starry)
    "B023", # Allow using global variables in lambdas
]
exclude = []
